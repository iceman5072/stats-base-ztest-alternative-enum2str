{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isString = require( '@stdlib/assert-is-string' ).isPrimitive;\nvar objectInverse = require( '@stdlib/utils-object-inverse' );\nvar enumeration = require( '@stdlib/stats-base-ztest-alternatives' ).enum;\n\n\n// VARIABLES //\n\nvar hash = objectInverse( enumeration(), {\n\t'duplicates': false\n});\n\n\n// MAIN //\n\n/**\n* Returns the Z-test alternative hypothesis string associated with a Z-test alternative hypothesis enumeration constant.\n*\n* @param {integer} value - alternative hypothesis enumeration constant\n* @returns {(string|null)} alternative hypothesis string or null\n*\n* @example\n* var str2enum = require( '@stdlib/stats-base-ztest-alternative-str2enum' );\n*\n* var v = str2enum( 'two-sided' );\n* // returns <number>\n*\n* var s = enum2str( v );\n* // returns 'two-sided'\n*/\nfunction enum2str( value ) {\n\tvar v = hash[ value ];\n\treturn ( isString( v ) ) ? v : null; // note: we include this guard to prevent walking the prototype chain\n}\n\n\n// EXPORTS //\n\nmodule.exports = enum2str;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the Z-test alternative hypothesis string associated with a Z-test alternative hypothesis enumeration constant.\n*\n* @module @stdlib/stats-base-ztest-alternative-enum2str\n*\n* @example\n* var str2enum = require( '@stdlib/stats-base-ztest-alternative-str2enum' );\n* var enum2str = require( '@stdlib/stats-base-ztest-alternative-enum2str' );\n*\n* var v = str2enum( 'two-sided' );\n* // returns <number>\n*\n* var s = enum2str( v );\n* // returns 'two-sided'\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAW,QAAS,0BAA2B,EAAE,YACjDC,EAAgB,QAAS,8BAA+B,EACxDC,EAAc,QAAS,uCAAwC,EAAE,KAKjEC,EAAOF,EAAeC,EAAY,EAAG,CACxC,WAAc,EACf,CAAC,EAoBD,SAASE,EAAUC,EAAQ,CAC1B,IAAIC,EAAIH,EAAME,CAAM,EACpB,OAASL,EAAUM,CAAE,EAAMA,EAAI,IAChC,CAKAP,EAAO,QAAUK,ICrBjB,IAAIG,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "isString", "objectInverse", "enumeration", "hash", "enum2str", "value", "v", "main"]
}
